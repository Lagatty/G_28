/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

//CRUD: CREATE, READ, UPDATE, DELETE

package com.mycompany.g_28;

import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author franc
 */
public class JFrame_CRUD extends javax.swing.JFrame {

    /**
     * Creates new form JFrame_CRUD
     */
    
    private SistemaReservasParque s_reservas;
    private JFrame mainWindows;

    public void setMainWindows(JFrame mainWindows) {
        this.mainWindows = mainWindows;
    }
    
    
    public void setSistemaReservas(SistemaReservasParque s_reservas){
        this.s_reservas = s_reservas;
    }
    
    public JFrame_CRUD() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton_ModificarReserva = new javax.swing.JButton();
        jButton_EliminarReserva = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        jButton1.setText("Buscar Reserva");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton_ModificarReserva.setText("Modificar Reserva");
        jButton_ModificarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ModificarReservaActionPerformed(evt);
            }
        });

        jButton_EliminarReserva.setText("Eliminar Reserva");
        jButton_EliminarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EliminarReservaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton_ModificarReserva)
                    .addComponent(jButton_EliminarReserva))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 162, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_ModificarReserva)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_EliminarReserva)))
                .addContainerGap(97, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        this.buscarReservaPorID();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton_ModificarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ModificarReservaActionPerformed
        // TODO add your handling code here:
        this.modificarReserva();
    }//GEN-LAST:event_jButton_ModificarReservaActionPerformed

    private void jButton_EliminarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EliminarReservaActionPerformed
        // ELIMINAR RESERVA
        this.eliminarReserva();
        
    }//GEN-LAST:event_jButton_EliminarReservaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame_CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame_CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame_CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame_CRUD().setVisible(true);
            }
        });
    }
    
    
    private void buscarReservaPorID() {
        String idReserva = JOptionPane.showInputDialog(this, "Ingrese el ID de la reserva a buscar:");
        if (idReserva == null || idReserva.trim().isEmpty()) return;
        
        for (Parque parque : s_reservas.getParques()) {
            for (Reserva reserva : parque.getReservas()) {
                if (reserva.getId().equalsIgnoreCase(idReserva.trim())) {
                    jTextArea.setText("RESERVA ENCONTRADA:\n\nParque: " + parque.getNombre() + 
                                    "\n" + reserva.toString());
                    return;
                }
            }
        }
        
        jTextArea.setText("No se encontró ninguna reserva con ID: " + idReserva);
    }
    
    private void modificarReserva() {
        String idReserva = JOptionPane.showInputDialog(this, "Ingrese el ID de la reserva a modificar:");
        if (idReserva == null || idReserva.trim().isEmpty()) return;
        
        // Buscar la reserva
        Reserva reservaEncontrada = null;
        Parque parqueReserva = null;
        
        for (Parque parque : s_reservas.getParques()) {
            for (Reserva reserva : parque.getReservas()) {
                if (reserva.getId().equalsIgnoreCase(idReserva.trim())) {
                    reservaEncontrada = reserva;
                    parqueReserva = parque;
                    break;
                }
            }
            if (reservaEncontrada != null) break;
        }
        
        if (reservaEncontrada == null) {
            JOptionPane.showMessageDialog(this, "Reserva no encontrada", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Mostrar datos actuales y permitir modificación
        String nuevaFecha = JOptionPane.showInputDialog(this, 
            "Fecha actual: " + reservaEncontrada.getFecha() + "\nIngrese nueva fecha (o presione Cancelar para mantener):");
        
        if (nuevaFecha != null && !nuevaFecha.trim().isEmpty()) {
            reservaEncontrada.setFecha(nuevaFecha);
            JOptionPane.showMessageDialog(this, "Reserva modificada exitosamente");
            jTextArea.setText("Reserva " + idReserva + " modificada:\n" + reservaEncontrada.toString());
        }
    }
    
    private void eliminarReserva() {
        String idReserva = JOptionPane.showInputDialog(this, "Ingrese el ID de la reserva a eliminar:");
        if (idReserva == null || idReserva.trim().isEmpty()) return;
        
        boolean eliminada = false;
        for (Parque parque : s_reservas.getParques()) {
            List<Reserva> reservas = parque.getReservas();
            for (int i = 0; i < reservas.size(); i++) {
                if (reservas.get(i).getId().equalsIgnoreCase(idReserva.trim())) {
                    reservas.remove(i);
                    eliminada = true;
                    break;
                }
            }
            if (eliminada) break;
        }
        
        if (eliminada) {
            JOptionPane.showMessageDialog(this, "Reserva eliminada exitosamente");
            jTextArea.setText("Reserva " + idReserva + " ha sido eliminada del sistema.");
        } else {
            JOptionPane.showMessageDialog(this, "Reserva no encontrada", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_EliminarReserva;
    private javax.swing.JButton jButton_ModificarReserva;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}
